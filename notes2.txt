Testing installation library
npm install @testing-library/react @testing-library/jest-dom --save-dev

The React Testing Library, which provides functions that will help test React components, 
including the capacity to render components and query functions that can return DOM elements.

The jest-dom package, which is a library that extends Jest with custom matchers to enable inspection of various parts of the DOM.

We need react to enable the components to function properly so we can test them.

The render function will do just what its name implies: "render" the component. 
What actually happens is that Jest creates a simulated DOM in a 
Node.js environment to approximate the DOM (no component is actually visibly rendered).

The cleanup function is used to remove components from the DOM to prevent memory leaking, 
as well as variable or data collisions between tests that could corrupt test results.

Next we will import the extend-expect library from the jest-dom package.

jest-dom offers access to custom matchers that are used to test DOM elements. 
we'll call the cleanup function using the afterEach global function from Jest:
This will ensure that after each test, we won't have any leftover memory data that could give us false results.
Then we'll use the describe function to declare the component we're testing, by adding the following code:
The first test will be the baseline to verify that the component is rendering.
In the first argument, a string declares what is being tested. In the second argument, a callback function runs the test.
Alternatively, test can also be used interchangeably with it to create a test.

The string that we passed into the describe function declares which component is being tested (i.e., About component).

The checkmark indicates which test is passing from the first argument in the it function (i.e., renders).

By pressing w, a list of commands will be shown, which enables re-testing.

In the next test, also known as a "test case", we'll compare snapshot versions of the DOM node structure.
A snapshot is a serialized version of the DOM node structure, enabled by Jest.

In this test case, we'll use the asFragment function, which returns a snapshot of the About component.
we'll test and compare whether the expected and actual outcomes match.
se the expect function with a matcher to assert something about a value. 
The index.test.js.snap file is a serialized version of the component's node structure, 
which includes elements, attributes, and text content. 
